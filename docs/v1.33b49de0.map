{"version":3,"sources":["diagramElements/Initiator.jsx","diagramElements/Method.jsx","diagramElements/Arrow.jsx","diagramElements/Subsection.jsx","diagramElements/Section.jsx","versions/v1/Connecting.jsx","versions/v1/Updating.jsx","versions/v1/Disconnecting.jsx"],"names":["Initiator","col","colspan","rowspan","docname","name","row","secondary","props","gridColumn","gridRow","propTypes","PropTypes","number","string","isRequired","bool","defaultProps","Method","endsInMiddle","main","type","oneOf","Arrow","from","solid","to","withAlt","autoFillProps","child","children","parentProps","index","indexOf","previousChild","nextChild","sectionCol","iOS","test","navigator","userAgent","Subsection","Component","mappedChildren","React","Children","map","cloneElement","Object","assign","window","CSS","supports","initiatorChildren","filter","el","methodChildren","otherChildren","includes","node","Section","find","advanced","renderChildren","Connecting","Updating","Disconnecting"],"mappings":"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","file":"v1.33b49de0.map","sourceRoot":"../src","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport mergeClassNames from 'merge-class-names';\n\nimport './Initiator.less';\n\nimport DocLink from './DocLink';\n\nconst Initiator = ({\n  col, colspan, rowspan, docname, name, row, secondary, ...props\n}) => (\n  <div\n    className={mergeClassNames('Initiator', docname && 'Initiator--hasLink', secondary && 'Initiator--secondary')}\n    data-column={col + 1}\n    style={{\n      gridColumn: `${col + 1} / ${colspan ? `span ${colspan}` : 'auto'}`,\n      gridRow: `${row * 3} / span ${rowspan}`,\n    }}\n  >\n    <h4>\n      <DocLink docname={docname} name={name} {...props} />\n    </h4>\n  </div>\n);\n\nInitiator.propTypes = {\n  col: PropTypes.number,\n  colspan: PropTypes.number,\n  docname: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  row: PropTypes.number.isRequired,\n  rowspan: PropTypes.number,\n  secondary: PropTypes.bool,\n};\n\nInitiator.defaultProps = {\n  rowspan: 2,\n};\n\nexport default Initiator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport mergeClassNames from 'merge-class-names';\n\nimport './Method.less';\n\nimport DocLink from './DocLink';\n\nconst Method = ({\n  col,\n  colspan,\n  docname,\n  endsInMiddle,\n  main,\n  name,\n  row,\n  secondary,\n  type,\n  ...props\n}) => (\n  <li\n    className={mergeClassNames(\n      'Method',\n      docname && 'Method--hasLink',\n      endsInMiddle && 'Method--endsInMiddle',\n      main && 'Method--main',\n      secondary && 'Method--secondary',\n      type,\n    )}\n    style={{\n      gridColumn: `${col + 1} / span ${colspan}`,\n      gridRow: `${row * 3} / span 2`,\n    }}\n  >\n    <DocLink docname={docname} name={name} {...props} />\n  </li>\n);\n\nMethod.propTypes = {\n  col: PropTypes.number,\n  colspan: PropTypes.number,\n  docname: PropTypes.string,\n  endsInMiddle: PropTypes.bool,\n  main: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  row: PropTypes.number.isRequired,\n  secondary: PropTypes.bool,\n  type: PropTypes.oneOf(['unknown', 'upgrade', 'live', 'custom']),\n};\n\nMethod.defaultProps = {\n  colspan: 1,\n};\n\nexport default Method;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport mergeClassNames from 'merge-class-names';\n\nimport './Arrow.less';\n\nconst Arrow = ({\n  col, colspan, from, solid, to, withAlt,\n}) => (\n  <div\n    className={mergeClassNames('Arrow', solid && 'Arrow--solid', withAlt && 'Arrow--withAlt')}\n    style={{\n      gridColumn: `${col + 1} / span ${colspan}`,\n      gridRow: `${(from * 3) + 2} / ${to * 3}`,\n    }}\n  >\n    {withAlt && <Arrow col={col} from={from} to={to} />}\n  </div>\n);\n\nArrow.propTypes = {\n  col: PropTypes.number,\n  colspan: PropTypes.number,\n  from: PropTypes.number,\n  solid: PropTypes.bool,\n  to: PropTypes.number,\n  withAlt: PropTypes.bool,\n};\n\nArrow.defaultProps = {\n  colspan: 1,\n};\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Initiator from './Initiator';\nimport Method from './Method';\nimport Arrow from './Arrow';\n\n/**\n * Fills props automatically for certain children types. For example, if <Arrow />\n * is put between two other <Method />s, then the arrow will automatically stretch\n * between these two.\n * @param {*} child\n * @param {*} children\n */\nexport const autoFillProps = (child, children, parentProps) => {\n  if (!child) {\n    return null;\n  }\n\n  const props = {};\n  const index = children.indexOf(child);\n\n  switch (child.type) {\n    case Arrow: {\n      if (typeof child.props.from === 'undefined') {\n        const previousChild = children[index - 1];\n        props.from = previousChild ? previousChild.props.row : 0;\n      }\n      if (typeof child.props.to === 'undefined') {\n        const nextChild = children[index + 1];\n        props.to = nextChild ? nextChild.props.row : 1;\n      }\n      break;\n    }\n    case Method: {\n      // Helps with grid alignment\n      if (\n        (props.col || child.props.col || parentProps.col) + (props.colspan || child.props.colspan)\n        < (parentProps.sectionCol + parentProps.colspan)\n      ) {\n        props.endsInMiddle = true;\n      }\n      break;\n    }\n    default:\n      break;\n  }\n  return props;\n};\n\nconst iOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nexport default class Subsection extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    col: PropTypes.number.isRequired,\n    colspan: PropTypes.number,\n    sectionCol: PropTypes.number,\n  };\n\n  render() {\n    const {\n      children, col, colspan, sectionCol,\n    } = this.props;\n\n    const mappedChildren = React.Children.map(\n      children,\n      child => React.cloneElement(\n        child,\n        Object.assign(\n          { col },\n          autoFillProps(child, children, { col, colspan, sectionCol }),\n          child.props,\n        ),\n      ),\n    );\n\n    // iOS fails to render display: contents properly despite reporting so\n    if (iOS || ('CSS' in window && !CSS.supports('display: contents'))) {\n      return mappedChildren;\n    }\n\n    // If display: contents is supported, we can create a proper list wrapper for list elements\n    const initiatorChildren = mappedChildren.filter(el => el.type === Initiator);\n    const methodChildren = mappedChildren.filter(el => el.type === Method);\n    const otherChildren = mappedChildren.filter(\n      el => !methodChildren.includes(el) && !initiatorChildren.includes(el),\n    );\n\n    return (\n      <>\n        {initiatorChildren}\n        <ul>\n          {methodChildren}\n        </ul>\n        {otherChildren}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport mergeClassNames from 'merge-class-names';\n\nimport './Section.less';\n\nimport T from '../i18n';\n\nimport Subsection from './Subsection';\n\nimport Method from './Method';\nimport Initiator from './Initiator';\n\nexport default class Section extends Component {\n  static propTypes = {\n    advanced: PropTypes.bool,\n    children: PropTypes.node,\n    col: PropTypes.number.isRequired,\n    colspan: PropTypes.number,\n    name: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    colspan: 1,\n  }\n\n  renderChildren() {\n    const { children, col: sectionCol } = this.props;\n\n    // If we're creating a section containing subsections, we don't need to create one.\n    if (!children.find(el => el.type === Method || el.type === Initiator)) {\n      return React.Children.map(\n        children,\n        child => React.cloneElement(\n          child,\n          Object.assign(\n            { sectionCol },\n            this.props,\n            child.props,\n          ),\n        ),\n      );\n    }\n\n    return (\n      <Subsection {...this.props} />\n    );\n  }\n\n  render() {\n    const {\n      advanced, col, colspan, name,\n    } = this.props;\n\n    const gridColumn = `${col + 1} / span ${colspan}`;\n\n    return (\n      <>\n        <section\n          className={mergeClassNames('Section', advanced && 'Section--advanced')}\n          style={{\n            gridColumn,\n            gridRow: advanced ? '1 / span 20' : '1 / span 14',\n          }}\n        />\n        <div\n          className={mergeClassNames('Section__highlight', advanced && 'Section__highlight--advanced')}\n          style={{\n            gridColumn,\n            gridRow: advanced ? '10 / span 11' : '8 / span 7',\n          }}\n        />\n        <h3\n          className=\"Section__title\"\n          style={{\n            gridColumn,\n            gridRow: 1,\n          }}\n        >\n          <T>\n            {name}\n          </T>\n        </h3>\n        {this.renderChildren()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from '../../diagramElements/Section';\nimport Method from '../../diagramElements/Method';\nimport Arrow from '../../diagramElements/Arrow';\nimport Initiator from '../../diagramElements/Initiator';\n\nconst Connecting = ({ advanced }) => (advanced ? (\n  <Section advanced name=\"Connecting\" col={1} colspan={1}>\n    <Arrow />\n    <Method\n      main\n      name=\"define\"\n      docname=\"element-definition\"\n      type=\"unknown\"\n      row={1}\n      col={1}\n    />\n    <Initiator\n      secondary\n      name=\"createElement()\"\n      docname=\"dom-document-createelement\"\n      docurl=\"https://dom.spec.whatwg.org\"\n      row={2}\n    />\n    <Arrow />\n    <Method\n      main\n      name=\"constructor\"\n      docname=\"custom-element-constructor\"\n      type=\"upgrade\"\n      row={3}\n      col={1}\n    />\n    <Initiator\n      secondary\n      name=\"appendChild()\"\n      docname=\"dom-node-appendchild\"\n      docurl=\"https://dom.spec.whatwg.org\"\n      row={4}\n      col={1}\n    />\n    <Arrow solid />\n    <Method\n      main\n      name=\"connectedCallback\"\n      docname=\"custom-element-reactions:becomes-connected\"\n      type=\"live\"\n      row={5}\n      colspan={1}\n    />\n    <Arrow withAlt solid />\n    <Method\n      main\n      name=\"custom render\"\n      type=\"custom\"\n      row={6}\n      col={1}\n      colspan={5}\n    />\n  </Section>\n) : (\n  <Section advanced name=\"Connecting\" col={1} colspan={1}>\n    <Arrow />\n    <Method\n      main\n      name=\"define\"\n      docname=\"element-definition\"\n      type=\"unknown\"\n      row={1}\n      col={1}\n    />\n    <Initiator\n      secondary\n      name=\"createElement()\"\n      docname=\"dom-document-createelement\"\n      docurl=\"https://dom.spec.whatwg.org\"\n      row={2}\n    />\n    <Arrow />\n    <Method\n      main\n      name=\"constructor\"\n      docname=\"custom-element-constructor\"\n      type=\"upgrade\"\n      row={3}\n      col={1}\n    />\n    <Initiator\n      secondary\n      name=\"appendChild()\"\n      docname=\"dom-node-appendchild\"\n      docurl=\"https://dom.spec.whatwg.org\"\n      row={4}\n      col={1}\n    />\n    <Arrow solid />\n    <Method\n      main\n      name=\"connectedCallback\"\n      docname=\"custom-element-reactions:becomes-connected\"\n      type=\"live\"\n      row={5}\n      colspan={1}\n    />\n    <Arrow withAlt solid />\n    <Method\n      main\n      name=\"custom render\"\n      type=\"custom\"\n      row={6}\n      col={1}\n      colspan={5}\n    />\n  </Section>\n));\n\nConnecting.propTypes = {\n  advanced: PropTypes.bool,\n};\n\nexport default Connecting;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from '../../diagramElements/Section';\nimport Subsection from '../../diagramElements/Subsection';\nimport Initiator from '../../diagramElements/Initiator';\nimport Method from '../../diagramElements/Method';\nimport Arrow from '../../diagramElements/Arrow';\n\nconst Updating = ({ advanced }) => (advanced ? (\n  <Section advanced name=\"Updating\" col={2} colspan={4}>\n    <Subsection col={2}>\n      <Method\n        main\n        name=\"observedAttributes\"\n        docname=\"concept-custom-element-definition-observed-attributes\"\n        type=\"unknown\"\n        col={2}\n        row={1}\n        colspan={2}\n      />\n      <Arrow row={2} colspan={2} />\n      <Initiator\n        name=\"setAttribute()\"\n        docname=\"dom-element-setattribute\"\n        docurl=\"https://dom.spec.whatwg.org\"\n        row={2}\n        col={2}\n        colspan={2}\n      />\n      <Arrow colspan={2} />\n      <Method\n        main\n        name=\"attributeChangedCallback\"\n        docname=\"custom-element-reactions:concept-element-attributes-change\"\n        type=\"upgrade\"\n        col={2}\n        row={3}\n        colspan={2}\n      />\n      <Arrow withAlt solid row={4} col={2} colspan={2} />\n      <Method\n        secondar\n        name=\"custom render\"\n        type=\"custom\"\n        row={6}\n        col={1}\n        colspan={5}\n      />\n    </Subsection>\n\n    <Subsection col={6}>\n      <Method\n        secondary\n        name=\"custom properties\"\n        docname=\"static-getderivedstatefromprops\"\n        type=\"custom\"\n        col={4}\n        row={3}\n        colspan={2}\n      />\n      <Arrow withAlt solid col={4} colspan={2} />\n      <Method\n        secondar\n        name=\"custom render\"\n        type=\"custom\"\n        row={6}\n        col={1}\n        colspan={5}\n      />\n    </Subsection>\n\n    <Subsection col={2}>\n      <Initiator\n        name=\"adoptNode()\"\n        docname=\"dom-document-adoptnode\"\n        docurl=\"https://dom.spec.whatwg.org\"\n        row={4}\n        col={3}\n        colspan={2}\n      />\n      <Arrow col={3} colspan={2} />\n      <Method\n        main\n        name=\"adoptedCallback\"\n        docname=\"custom-element-reactions:concept-node-adopt\"\n        type=\"live\"\n        col={3}\n        row={5}\n        colspan={2}\n      />\n      <Arrow withAlt solid row={4} col={3} colspan={2} />\n      <Method\n        secondar\n        name=\"custom render\"\n        type=\"custom\"\n        row={6}\n        col={1}\n        colspan={5}\n      />\n    </Subsection>\n  </Section>\n) : (\n  <Section advanced name=\"Updating\" col={2} colspan={4}>\n    <Subsection col={2}>\n      <Method\n        main\n        name=\"observedAttributes\"\n        docname=\"concept-custom-element-definition-observed-attributes\"\n        type=\"unknown\"\n        col={2}\n        row={1}\n        colspan={2}\n      />\n      <Arrow row={2} colspan={2} />\n      <Initiator\n        name=\"setAttribute()\"\n        docname=\"dom-element-setattribute\"\n        docurl=\"https://dom.spec.whatwg.org\"\n        row={2}\n        col={2}\n        colspan={2}\n      />\n      <Arrow colspan={2} />\n      <Method\n        main\n        name=\"attributeChangedCallback\"\n        docname=\"custom-element-reactions:concept-element-attributes-change\"\n        type=\"upgrade\"\n        col={2}\n        row={3}\n        colspan={2}\n      />\n      <Arrow withAlt solid row={4} col={2} colspan={2} />\n      <Method\n        secondar\n        name=\"custom render\"\n        type=\"custom\"\n        row={6}\n        col={1}\n        colspan={5}\n      />\n    </Subsection>\n\n    <Subsection col={6}>\n      <Method\n        secondary\n        name=\"custom properties\"\n        docname=\"static-getderivedstatefromprops\"\n        type=\"custom\"\n        col={4}\n        row={3}\n        colspan={2}\n      />\n      <Arrow withAlt solid col={4} colspan={2} />\n      <Method\n        secondar\n        name=\"custom render\"\n        type=\"custom\"\n        row={6}\n        col={1}\n        colspan={5}\n      />\n    </Subsection>\n\n    <Subsection col={2}>\n      <Initiator\n        name=\"adoptNode()\"\n        docname=\"dom-document-adoptnode\"\n        docurl=\"https://dom.spec.whatwg.org\"\n        row={4}\n        col={3}\n        colspan={2}\n      />\n      <Arrow col={3} colspan={2} />\n      <Method\n        main\n        name=\"adoptedCallback\"\n        docname=\"custom-element-reactions:concept-node-adopt\"\n        type=\"live\"\n        col={3}\n        row={5}\n        colspan={2}\n      />\n      <Arrow withAlt solid row={4} col={3} colspan={2} />\n      <Method\n        secondar\n        name=\"custom render\"\n        type=\"custom\"\n        row={6}\n        col={1}\n        colspan={5}\n      />\n    </Subsection>\n  </Section>\n));\n\nUpdating.propTypes = {\n  advanced: PropTypes.bool,\n};\n\nexport default Updating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from '../../diagramElements/Section';\nimport Method from '../../diagramElements/Method';\nimport Arrow from '../../diagramElements/Arrow';\nimport Initiator from '../../diagramElements/Initiator';\n\nconst Disconnecting = ({ advanced }) => (advanced ? (\n  <Section advanced name=\"Disconnecting\" col={6} colspan={2}>\n    <Initiator\n      secondary\n      name=\"removeChild()\"\n      docname=\"dom-node-removechild\"\n      docurl=\"https://dom.spec.whatwg.org\"\n      row={4}\n      colspan={2}\n    />\n    <Arrow solid colspan={2} />\n    <Method\n      main\n      name=\"disconnectedCallback\"\n      docname=\"custom-element-reactions:becomes-disconnected\"\n      type=\"live\"\n      row={5}\n      colspan={2}\n    />\n  </Section>\n) : (\n  <Section advanced name=\"Disconnecting\" col={6} colspan={2}>\n    <Initiator\n      secondary\n      name=\"removeChild()\"\n      docname=\"dom-node-removechild\"\n      docurl=\"https://dom.spec.whatwg.org\"\n      row={4}\n      colspan={2}\n    />\n    <Arrow solid colspan={2} />\n    <Method\n      main\n      name=\"disconnectedCallback\"\n      docname=\"custom-element-reactions:becomes-disconnected\"\n      type=\"live\"\n      row={5}\n      colspan={2}\n    />\n  </Section>\n));\n\nDisconnecting.propTypes = {\n  advanced: PropTypes.bool,\n};\n\nexport default Disconnecting;\n"]}